@page "/threesum"
<h3>ThreeSum</h3>
<p>TASK : Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.</p>
<hr class="solid">
<div class="row justify-content-center m-3">
    <div class="col-sm-8">
        <a>INPUT = { -1, 0, 1, 2, -1, -4 }</a>

        <hr class="solid">
        <button class="btn btn-primary" @onclick="ThreeSums">
            Run Code
        </button>
        <hr class="solid">
        <p>OUTPUT :</p>
        <p><strong>@result</strong></p>
        <hr class="solid">

        <button class="btn btn-primary" @onclick="Show">Show Code</button>
        <div style="@showcode">
            <img src="img/ThreeSum.PNG" alt="Image">
        </div>
    </div>
</div>
@code {
    public string showcode = "display:none";
    public void Show()
    {
        showcode = "display:flex";
    }


    public int[] nums = { -1, 0, 1, 2, -1, -4 };
    public IList<IList<int>> res;
    List<int> res2 = new List<int>();
    public string result = "";



    public void ThreeSums()
    {
        int[] nums = { -1, 0, 1, 2, -1, -4 };
        Array.Sort(nums);
        IList<IList<int>> lists = new List<IList<int>>();

        for (int i = 0; i < nums.Length - 2; i++)
        {
            for (int j = i + 1; j < nums.Length - 1; j++)
            {
                int left = j + 1;
                int right = nums.Length - 1;
                while (left <= right)
                {
                    int mid = (left + right) / 2;
                    if (nums[mid] == 0 - nums[i] - nums[j])
                    {
                        lists.Add(new List<int>() { nums[i], nums[j], nums[mid] });
                        break;
                    }
                    else if (nums[mid] < 0 - nums[i] - nums[j])
                    {
                        left = mid + 1;
                    }
                    else
                    {
                        right = mid - 1;
                    }
                }

                while (j < nums.Length - 1 && nums[j] == nums[j + 1]) j++;
            }

            while (i < nums.Length - 1 && nums[i] == nums[i + 1]) i++;
        }
        res = lists;

        foreach (List<int> subList in res)
        {
            foreach (int item in subList)
            {
                result = result + item + " ";
            }
        }

    }
}
